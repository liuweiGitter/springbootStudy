<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.telecom.js.noc.hxtnms.operationplan.mapper.mysql.MysqlDsCommonMapper">

    <insert id="insert">
        ${sql}
    </insert>

    <update id="update">
        ${sql}
    </update>

    <select id="resultMapQuery" resultType="Map">
        ${sql}
    </select>

    <select id="listStringQuery" resultType="String">
        ${sql}
    </select>

    <select id="countQuery" resultType="Integer">
        ${sql}
    </select>

    <select id="ifExistOne" resultType="java.lang.Boolean">
        select count(1) from (select 1 from ${tableName} where 1 = 1
        <foreach collection="paramMap.keys" item="key" open="" close="" separator="">
            <choose>
                <when test="'${key}' != 'id'">
                    and ${key} = #{paramMap[${key}]}
                </when>
                <otherwise>
                    and id != #{paramMap[id]}
                </otherwise>
            </choose>
        </foreach>
        limit 1) a
    </select>

    <update id="deleteWithUniqueIndex">
        update ${tableName} set del_flag = 1<if test="#{uniqueColumn} != null">,${uniqueColumn} = concat(${uniqueColumn},'_delete')</if>
        where id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="complexOperation">
        ${sql}
    </update>

    <select id="ifRelationExistOne" resultType="java.lang.Boolean">
        select count(1) from (select 1 from ${tableName} where 1 = 1
        <foreach collection="likeMap.keys" item="key" open="" close="" separator="">
            and ${key} like concat('%',#{likeMap[${key}]},'%')
        </foreach>
        <foreach collection="equalMap.keys" item="key" open="" close="" separator="">
            <choose>
                <when test="'${key}' != 'id'">
                    and ${key} = #{equalMap[${key}]}
                </when>
                <otherwise>
                    and id != #{equalMap[id]}
                </otherwise>
            </choose>
        </foreach>
        limit 1) a
    </select>

</mapper>
