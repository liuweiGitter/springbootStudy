package com.telecom.js.noc.hxtnms.operationplan.utils;

import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Field;

/**
 * Author: liuwei
 * Date: 2019-06-01 18:04
 * Desc: mapper.xml sql语句生成
 * 生成sql语句半成品，简化mapper.xml中sql语句编写
 */
public class MapperSqlUtil {

    private static String[][] getArray(Class clz){
        Field[] fieldArray = clz.getDeclaredFields();
        int size = fieldArray.length;
        String[] fields = new String[size];
        String[] columns = new String[size];
        for (int i=0;i<size;i++){
            fields[i]=fieldArray[i].getName();
            columns[i]=StringUtils.replacePattern(fields[i],"([A-Z])","_$1").toLowerCase();
        }
        return new String[][]{fields,columns};
    }

    private static void getMapperSql(String[][] array,String tableName){
        String[] fields = array[0];
        String[] columns = array[1];
        StringBuilder insertBuilder = new StringBuilder("<insert id=\"xxx\" parameterType=\"xxx\" useGeneratedKeys=\"true\">\ninsert into "+tableName+"(");
        StringBuilder insertValuesBuilder = new StringBuilder("\nvalues (");
        StringBuilder updateBuilder = new StringBuilder("<update id=\"xxx\" parameterType=\"xxx\">\nupdate "+tableName+"\nset ");
        StringBuilder selectBuilder = new StringBuilder("<select id=\"xxx\" parameterType=\"xxx\" resultType=\"xxx\">\nselect ");
        for (int i=0;i<fields.length;i++){
            if (i!=fields.length-1){
                insertBuilder.append(columns[i]+",");
                insertValuesBuilder.append("#{"+fields[i]+"},");
                updateBuilder.append(columns[i]+" = #{"+fields[i]+"},");
                selectBuilder.append(columns[i]+",");
            }else{
                insertBuilder.append(columns[i]+")").append(insertValuesBuilder).append("#{"+fields[i]+"})");
                updateBuilder.append(columns[i]+" = #{"+fields[i]+"} where id = #{id}");
                selectBuilder.append(columns[i]+" from "+tableName);
            }
        }

        //打印这些sql
        System.out.println("- - - - -insert sql- - - - -");
        System.out.println(insertBuilder+"\n</insert>");
        System.out.println("- - - - -update sql- - - - -");
        System.out.println(updateBuilder+"\n</update>");
        System.out.println("- - - - -select sql- - - - -");
        System.out.println(selectBuilder+"\n</select>");
    }

    private static String[] getFieldsByColumns(String[] columns){
        String[] fields = new String[columns.length];
        for (int i = 0; i < columns.length; i++) {
            if (!columns[i].contains("_")){
                fields[i]=columns[i];
            }else{
                String[] column = columns[i].split("_");
                fields[i] = column[0];
                for (int j = 1; j < column.length; j++) {
                    fields[i]+=StringUtils.capitalize(column[j]);
                }
            }
        }
        return fields;
    }

    private static void getMapperSqlForeach(String[][] array,String tableName){
        String[] fields = array[0];
        String[] columns = array[1];

        StringBuilder insertBuilder = new StringBuilder("<insert id=\"xxx\" parameterType=\"xxx\" useGeneratedKeys=\"true\">\n<if test=\"xxx != null\" >\ninsert into "+tableName+"(");
        StringBuilder insertValuesBuilder = new StringBuilder("\nvalues\n<foreach collection=\"xxx\" item=\"item\" index= \"index\" separator =\",\" close=\";\">\n");
        for (int i=0;i<fields.length;i++){
            if (i!=fields.length-1){
                insertBuilder.append(columns[i]+",");
                insertValuesBuilder.append("#{item."+fields[i]+"},");
            }else{
                insertBuilder.append(columns[i]+")").append(insertValuesBuilder).append("#{item."+fields[i]+"})\n</foreach>");
            }
        }

        //打印sql
        System.out.println("- - - - -insert foreach sql- - - - -");
        System.out.println(insertBuilder+"\n</if>\n</insert>");
    }

    /**
     * 标准sql
     * @param clz  实体类class
     * @param tableName  数据表名
     */
    public static void getMapperSql(Class clz,String tableName){
        String[][] array = getArray(clz);
        getMapperSql(array,tableName);
    }

    /**
     * 根据列名字符串生成sql
     * @param tableName  数据表名
     * @param columnsString  数据列字符串，形如"plan_name,updater,owner,period_year"
     */
    public static void getMapperSql(String tableName,String columnsString){
        String[] columns = columnsString.split(",");
        String[] fields = getFieldsByColumns(columns);
        String[][] array = new String[][]{fields,columns};
        getMapperSql(array,tableName);
    }

    /**
     * 根据列名字符串生成insert foreach的sql
     * @param tableName  数据表名
     * @param columnsString  数据列字符串，形如"plan_name,updater,owner,period_year"
     */
    public static void getMapperSqlForeach(String tableName,String columnsString){
        String[] columns = columnsString.split(",");
        String[] fields = getFieldsByColumns(columns);
        String[][] array = new String[][]{fields,columns};
        getMapperSqlForeach(array,tableName);
    }

}
