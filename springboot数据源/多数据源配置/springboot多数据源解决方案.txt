【springboot各类数据源的默认配置】
springboot默认使用内置的tomcat数据库连接池，在配置文件为每一种类的数据源默认定义了固定的属性
配置这些属性，并在pom中引入相关数据库jar以后，spring启动时将自动实例化相应数据源对象
以常用的数据源为例，springboot application.properties和pom文件配置如下：
-----------1.mysql数据库-----------
	spring.datasource.url=jdbc:mysql://数据库ip:数据库port/数据库名?参数1=参数值1&参数2=参数值2&参数3=参数值3...
	spring.datasource.driverClassName=com.mysql.jdbc.Driver
	spring.datasource.username=数据库用户名
	spring.datasource.password=数据库用户密码

	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.46</version>
	</dependency>
-----------2.oracle数据库-----------
	spring.datasource.url=jdbc:oracle:thin:@数据库ip:数据库port/数据库实例名
	spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
	spring.datasource.username=数据库用户名
	spring.datasource.password=数据库用户密码
	
	<dependency>
		<groupId>com.oracle</groupId>
		<artifactId>ojdbc6</artifactId>
		<version>11.2.0.3</version>
	</dependency>
-----------3.mongodb数据库-----------
	(注：mongo鉴权的数据库可能和实际使用的数据库不同，如果出现这种情况，则不能自动注入，需要手动配置，见下文)
	spring.data.mongodb.host=数据库ip
	spring.data.mongodb.port=数据库port
	spring.data.mongodb.database=数据库名
	spring.data.mongodb.username=鉴权用户名，免鉴权时为空
	spring.data.mongodb.password=鉴权密码，免鉴权时为空
	
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-mongodb</artifactId>
	</dependency>
-----------4.redis数据库-----------
	spring.redis.database=数据库编号
	spring.redis.host=数据库ip
	spring.redis.port=数据库port
	spring.redis.password=鉴权密码，免鉴权时为空(鉴权只需要密码，不需要用户名)
	spring.redis.jedis.pool.max-idle=8
	spring.redis.jedis.pool.min-idle=0
	spring.redis.jedis.pool.max-active=8
	spring.redis.jedis.pool.max-wait=-1ms

	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-redis</artifactId>
	</dependency>
	<dependency>
		<groupId>redis.clients</groupId>
		<artifactId>jedis</artifactId>
	</dependency>
	<dependency>
		<groupId>org.springframework.data</groupId>
		<artifactId>spring-data-redis</artifactId>
	</dependency>

【springboot多数据源的配置和使用】		
springboot应用程序中可能存在多种多个数据源
如一个项目中可能同时使用mysql、oracle、mongodb、redis等种类的数据源，每种数据源又可能有多个库
此时需要为每一个数据源创建不同名称的bean
一个配置文件不能配置多个重名的参数名，显然，spring不能同时为这些有重名参数的数据源(比如多个mysql或者多个oracle或者既有mysql又有oracle等)自动创建bean
需要手动区分这些参数并手动注入bean，或者使用druid多数据源配置

druid的优点是可以创建JDBC关系数据库的多例bean，并且可以AOP切面绑定mapper到某一个数据源
缺点是，对mapper只能按其package绑定，也就是包级别的批量绑定，灵活性较低，而且对于NoSQL没有解决方案
多种类多数据源的完整解决方案是，对于JDBC使用类似druid的方法(直接使用druid，也可以仿照druid方式自定义，本文会演示自定义druid式方法)，对于NoSQL则自定义配置方案如下文


本文说明如何手动区分这些参数并手动注册bean，以及在spring boot测试用例中和spring boot正文代码中怎么使用这些自定义的bean
本文演示中，对于MongoDB、Redis，分别使用mongoTemplate和redisTemplate模板类操作，对于MySQL和Oracle则注册dataSource实例

【mongodb多数据源配置】
参见《mongodb多数据源配置》

【redis多数据源配置】
参见《redis多数据源配置》

【mysql和oracle多数据源配置】
参见《mysql和racle多数据源配置》
